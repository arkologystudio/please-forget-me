version: '3.8'

services:
  db:
    image: postgres:13
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    volumes:
      - db-data:/var/lib/postgresql/data
    ports:
      - '5432:5432'
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      interval: 10s
      timeout: 5s
      retries: 5

  migrate:
    build:
      context: .
      dockerfile: Dockerfile.dev
    volumes:
      - .:/app:cached
      - node_modules:/app/node_modules
      - ./entrypoint-migrate.sh:/usr/local/bin/entrypoint-migrate.sh
    environment:
      DATABASE_URL: postgresql://${DB_USER}:${DB_PASSWORD}@${DB_HOST}:${DB_PORT}/${DB_NAME}
    depends_on:
      db:
        condition: service_healthy
    entrypoint: ["/usr/local/bin/entrypoint-migrate.sh"]
    command: ["npm", "run", "migrate"]

  seed:
    build:
      context: .
      dockerfile: Dockerfile.dev
    volumes:
      - .:/app:cached
      - node_modules:/app/node_modules
      - ./entrypoint-seed.sh:/usr/local/bin/entrypoint-seed.sh
    environment:
      DATABASE_URL: postgresql://${DB_USER}:${DB_PASSWORD}@${DB_HOST}:${DB_PORT}/${DB_NAME}
    depends_on:
      migrate:
        condition: service_completed_successfully
    entrypoint: ["/usr/local/bin/entrypoint-seed.sh"]
    command: ["npm", "run", "seed"]

  app:
    build:
      context: .
      dockerfile: Dockerfile.dev
    volumes:
      - .:/app:cached
      - node_modules:/app/node_modules
      - ./entrypoint.sh:/usr/local/bin/entrypoint.sh
    ports:
      - '3000:3000'
    environment:
      DATABASE_URL: postgresql://${DB_USER}:${DB_PASSWORD}@${DB_HOST}:${DB_PORT}/${DB_NAME}
    depends_on:
      seed:
        condition: service_completed_successfully
    entrypoint: ["/usr/local/bin/entrypoint.sh"]
    command: ["npm", "run", "dev"]

volumes:
  db-data:
  node_modules: