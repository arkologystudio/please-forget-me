datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  binaryTargets = ["native", "debian-openssl-1.1.x"]

}

generator client {
  provider = "prisma-client-js"
}

model User {
  id              Int               @id @default(autoincrement())
  identifier      String            @unique
  threads         Thread[]
  createdAt       DateTime          @default(now())
  email           String            @unique
  formSubmissions FormSubmission[]
  Email           Email[]
}

model Organisation {
  id      Int      @id @default(autoincrement())
  name    String
  email   String   @unique
  threads Thread[]
  slug    String   @unique
}

model Thread {
  id              Int              @id @default(autoincrement())
  user            User             @relation(fields: [userId], references: [id])
  userId          Int
  organisation    Organisation     @relation(fields: [organisationId], references: [id])
  organisationId  Int
  emails          Email[]
  createdAt       DateTime         @default(now())
  status          String // e.g., "open", "closed"
  formSubmissions FormSubmission[]
}

model Email {
  id        Int      @id @default(autoincrement())
  thread    Thread   @relation(fields: [threadId], references: [id])
  threadId  Int
  sender    String
  content   String
  createdAt DateTime @default(now())
  sentAt    DateTime
  status    String   @default("pending")
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
  mailgunId String   @unique
}

model FormSubmission {
  id        Int      @id @default(autoincrement())
  userId    Int
  user      User     @relation(fields: [userId], references: [id])
  createdAt DateTime @default(now())
  data      Json
  Thread    Thread?  @relation(fields: [threadId], references: [id])
  threadId  Int?
}

model FailedInitiationAttempt {
  id           Int      @id @default(autoincrement())
  errorMessage String
  data         Json
  createdAt    DateTime @default(now())
}