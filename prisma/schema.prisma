datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id              String           @id @default(cuid())
  identifier      String           @unique
  threads         Thread[]
  createdAt       DateTime         @default(now())
  email           String           @unique
  formSubmissions FormSubmission[]
}

model Organisation {
  id      Int      @id @default(autoincrement())
  name    String
  email   String   @unique
  threads Thread[]
  slug    String   @unique
}

model Thread {
  id              Int              @id @default(autoincrement())
  user            User             @relation(fields: [userId], references: [id])
  userId          String
  organisation    Organisation     @relation(fields: [organisationId], references: [id])
  organisationId  Int
  emails          Email[]
  createdAt       DateTime         @default(now())
  status          String // e.g., "open", "closed"
  formSubmissions FormSubmission[]
}

model Email {
  id       Int      @id @default(autoincrement())
  thread   Thread   @relation(fields: [threadId], references: [id])
  threadId Int
  sender   String // "user" or "organisation"
  content  String
  sentAt   DateTime @default(now())
}

model FormSubmission {
  id        String   @id @default(cuid())
  userId    String
  user      User     @relation(fields: [userId], references: [id])
  createdAt DateTime @default(now())
  data      Json
  Thread    Thread?  @relation(fields: [threadId], references: [id])
  threadId  Int?
}

model FailedInitiationAttempt {
  id          Int      @id @default(autoincrement())
  errorMessage String
  data        Json
  createdAt   DateTime @default(now())
}
